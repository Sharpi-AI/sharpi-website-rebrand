---
import Card from "./card.astro";
import { Image } from "astro:assets";

import img01 from "@/assets/testimonials/img-1.png";
import img02 from "@/assets/testimonials/img-2.png";
import img03 from "@/assets/testimonials/img-3.png";
import img04 from "@/assets/testimonials/img-4.png";

const testimonials = [
  {
    id: "testimonials-card-1",
    name: "Cris Taverna",
    role: "Diretora Comercial",
    company: "Multiplás",
    text: "A Sharpi permitiu que nossas vendedoras ganhassem tempo e se dedicassem ainda mais às prospecções, aumentando o faturamento através das mensagens automáticas, um dos recursos que ela oferece. Com essa agilidade, conseguimos atender novos clientes com maior eficiência e a atenção necessária, fortalecendo nossas relações e ampliando nossa base de clientes.",
    avatar: img04,
  },
  {
    id: "testimonials-card-3",
    name: "Leonardo Ribeiro",
    role: "Gerente Comercial",
    company: "Bold Snacks",
    text: "Com o apoio da Sharpi, conseguimos otimizar o tempo da equipe comercial e melhorar significativamente o controle e o acompanhamento dos resultados. Hoje temos muito mais agilidade e visibilidade na gestão.",
    avatar: img01,
  },
  {
    id: "testimonials-card-2",
    name: "Ana Julia",
    role: "Vendedora",
    company: "Multiplás",
    text: "Com a Sharpi, consigo lançar mais pedidos e responder mais cotações em menos tempo e com menos erros.",
    avatar: img02,
  },
  // {
  //   id: "testimonials-card-4",
  //   name: "Carlos Mendes",
  //   role: "Sales Manager",
  //   company: "Innovation Labs",
  //   text: "What impressed us most about Sharpi is how quickly it adapted to our sales process. The AI learns fast and provides insights that actually help close deals.",
  //   avatar: img03,
  // },
  {
    id: "testimonials-card-5",
    name: "Simone",
    role: "Vendedora",
    company: "Casas Pedro",
    text: "A implantação da Sharpi foi um divisor de águas na nossa rotina. Com a IA ajudando no lançamento de pedidos, ganhamos agilidade, reduzimos erros e conseguimos focar em tarefas mais estratégicas. É impressionante como ela aprende rápido e se adapta à nossa operação. Hoje, não imaginamos mais nosso dia a dia sem essa tecnologia. A Sharpi trouxe mais eficiência e confiança para o nosso trabalho.",
    avatar: img04,
  },
];

const mosaicImages = [
{
    id: "mosaic-2",
    src: img03,
    alt: "Team member profile photo",
    position: "top-[63.5%] left-[31%]",
    size: "w-[12%] aspect-[165/203]",
    width: 165 * 1.5,
    height: 203 * 1.5,
  },
  {
    id: "mosaic-1",
    src: img04,
    alt: "Team member profile photo",
    position: "top-[7%] left-[44%]",
    size: "w-[24%] aspect-[326/403]",
    width: 326 * 1.5,
    height: 403 * 1.5,
  },
 
  {
    id: "mosaic-4",
    src: img02 ,
    alt: "Team member profile photo",
    position: "top-[52%] left-[14%]",
    size: "w-[5%] aspect-[72/72]",
    width: 72 * 1.5,
    height: 72 * 1.5,
  },
  {
    id: "mosaic-3",
    src:  img01,
    alt: "Team member profile photo",
    position: "top-[42%] left-[74%]",
    size: "w-[5%] aspect-[72/72]",
    width: 72 * 1.5,
    height: 72 * 1.5,
  },

];
---

<section
  id="testimonials"
  class="py-28 px-4 flex flex-col items-center justify-center overflow-hidden"
>
  <h2
    class="text-[37px] md:text-[58px] text-balance md:max-w-[28ch] text-center font-normal leading-none text-[#383838] mb-8 tracking-tight"
  >
    Os times de venda mais avançados confiam na Sharpi
  </h2>

  <!-- Desktop Version -->
  <div
    class="hidden md:block relative z-0 aspect-[1356/740] w-full max-w-7xl mx-auto"
  >
    <video
      class="absolute -z-10 w-full h-full inset-0 rounded-2xl opacity-20 object-cover"
      src="/assets/medias/index/testimonials/background.mp4"
      autoplay
      loop
      muted
      playsinline
      aria-label="Background animation"
    >
    </video>

    <div
      class={`absolute ${mosaicImages[0].position} z-10 ${mosaicImages[0].size} rounded-2xl bg-white overflow-hidden`}
    >
      <Image
        src={mosaicImages[0].src}
        alt={mosaicImages[0].alt}
        class="w-full h-full object-cover"
        width={mosaicImages[0].width}
        height={mosaicImages[0].height}
        loading="lazy"
        
      />
    </div>

    <div class="absolute top-[34%] left-[22.5%] z-10">
      <Card
        targetScale="0.82"
        cardId="testimonials-card-1"
        name={testimonials[0].name}
        role={testimonials[0].role}
        company={testimonials[0].company}
        text={testimonials[0].text}
        avatar={testimonials[0].avatar}
      />
    </div>

    <div
      class={`absolute ${mosaicImages[1].position} z-10 ${mosaicImages[1].size} rounded-2xl bg-white overflow-hidden`}
    >
      <Image
        src={mosaicImages[1].src}
        alt={mosaicImages[1].alt}
        class="w-full h-full object-cover"
        width={mosaicImages[1].width}
        height={mosaicImages[1].height}
        loading="lazy"
      />
    </div>

    <!-- <div class="absolute top-[63.5%] left-[16.75%] z-10">
      <Card
        targetScale="0.54"
        cardId="testimonials-card-2"
        name={testimonials[1].name}
        role={testimonials[1].role}
        company={testimonials[1].company}
        text={testimonials[1].text}
        avatar={testimonials[1].avatar}
      />
    </div> -->

    <div class="absolute top-[63.5%] left-[44%] z-10">
      <Card
        targetScale="0.82"
        cardId="testimonials-card-3"
        name={testimonials[2].name}
        role={testimonials[2].role}
        company={testimonials[2].company}
        text={testimonials[2].text}
        avatar={testimonials[2].avatar}
      />
    </div>

    <div class="absolute top-[54%] left-[69%] z-10">
      <Card
        targetScale="0.58"
        cardId="testimonials-card-4"
        name={testimonials[1].name}
        role={testimonials[1].role}
        company={testimonials[1].company}
        text={testimonials[1].text}
        avatar={testimonials[1].avatar}
      />
    </div>

    <div class="absolute top-[35%] left-[60%] z-10">
      <Card
        targetScale="0.50"
        cardId="testimonials-card-5"
        name={testimonials[3].name}
        role={testimonials[3].role}
        company={testimonials[3].company}
        text={testimonials[3].text}
        avatar={testimonials[3].avatar}
      />
    </div>

    <div
      class={`absolute ${mosaicImages[2].position} z-10 ${mosaicImages[2].size} rounded bg-white overflow-hidden`}
    >
      <Image
        src={mosaicImages[2].src}
        alt={mosaicImages[2].alt}
        class="w-full h-full object-cover"
        width={mosaicImages[2].width}
        height={mosaicImages[2].height}
        loading="lazy"
      />
    </div>

    <div
      class={`absolute ${mosaicImages[3].position} z-10 ${mosaicImages[3].size} rounded bg-white overflow-hidden`}
    >
      <Image
        src={mosaicImages[3].src}
        alt={mosaicImages[3].alt}
        class="w-full h-full object-cover"
        width={mosaicImages[3].width}
        height={mosaicImages[3].height}
        loading="lazy"
      />
    </div>
  </div>

  <!-- Mobile Version -->
  <div class="relative block md:hidden  w-full">
    <div
      class="splide relative aspect-[308/356] flex items-center justify-center"
      id="testimonials-carousel"
    >
      <video
        class="absolute z-0 w-full h-full inset-0 rounded-[20px] opacity-20 object-cover"
        src="/assets/medias/index/testimonials/background.mp4"
        autoplay
        loop
        muted
        playsinline
        aria-label="Background animation"
      >
      </video>
      <div class="splide__track relative z-10">
        <ul class="splide__list">
          {
            testimonials.map((testimonial) => (
              <li class="splide__slide w-fit flex items-center [.is-active&_>_div]:min-h-[356px]">
                <div class="group w-[308px] min-h-[322px] hover:max-h-[500px] overflow-hidden bg-white rounded-xl flex border-[0.5px] border-[rgba(0,0,0,0.12)] scale-100 duration-400 transition-all ">
                  <div class="flex flex-col gap-8 p-4 justify-between flex-1">
                    <div class="flex gap-3 items-center">
                      <div class="size-8 shrink-0 bg-gray-200 rounded-full overflow-hidden">
                        <Image
                          src={testimonial.avatar}
                          alt={`${testimonial.name} avatar`}
                          class="w-full h-full object-cover"
                          width={32}
                          height={32}
                          loading="lazy"
                        />
                      </div>
                      <div class="flex flex-col gap-0.5">
                        <span class="font-normal text-sm text-[#3A3A3A] leading-none">
                          {testimonial.name}
                        </span>
                        <div class="flex gap-0.5">
                          <span class="font-normal text-sm text-[#747474] leading-none">
                            {testimonial.role}
                          </span>
                          <span class="font-medium text-sm text-[#3A3A3A] leading-none">
                            {testimonial.company}
                          </span>
                        </div>
                      </div>
                    </div>

                    <p class="text-base md:text-sm tracking-[-0.02em] leading-snug mt-auto text-balance ">
                      {testimonial.text}
                    </p>
                  </div>
                </div>
              </li>
            ))
          }
        </ul>
      </div>
    </div>
  </div>
</section>

<script>
  import { Splide } from "@splidejs/splide";
  import "@splidejs/splide/css/core";

  const initTestimonials = () => {
    const testimonialCards =
      document.querySelectorAll<HTMLElement>(".testimonials-card");
    const TRANSITION_DURATION = 300;

    const setupCardInteractions = (card: HTMLElement) => {
      const targetScale = card.getAttribute("data-target-scale") || "1";
      const cardContainer = card.parentElement;
      let zIndexTimeout: ReturnType<typeof setTimeout> | null = null;

      const activateCard = () => {
        if (zIndexTimeout) {
          clearTimeout(zIndexTimeout);
          zIndexTimeout = null;
        }

        card.style.transform = "scale(1)";
        if (cardContainer) {
          cardContainer.style.zIndex = "50";
        }
      };

      const deactivateCard = () => {
        card.style.transform = `scale(${targetScale})`;
        if (cardContainer) {
          zIndexTimeout = setTimeout(() => {
            cardContainer.style.zIndex = "10";
            zIndexTimeout = null;
          }, TRANSITION_DURATION);
        }
      };

      card.addEventListener("mouseenter", activateCard);
      card.addEventListener("mouseleave", deactivateCard);
      card.addEventListener("focus", activateCard);
      card.addEventListener("blur", deactivateCard);

      card.addEventListener("keydown", (e) => {
        if (e.key === "Enter" || e.key === " ") {
          e.preventDefault();
          activateCard();
        }
      });
    };

    testimonialCards.forEach(setupCardInteractions);

    const splideContainer = document.getElementById("testimonials-carousel");
    if (!splideContainer) return;

    // Calculate padding to show peek of adjacent cards
    // Show ~40px of adjacent cards on each side
    const peekAmount = 40;
    const cardWidth = 308;
    const padding = Math.max(peekAmount, (window.innerWidth - cardWidth - peekAmount * 2) / 2);

    const testimonialsSplide = new Splide("#testimonials-carousel", {
      perMove: 1,
      speed: 600,
      autoWidth: true,
      focus: "center",
      pagination: true,
      arrows: false,
      gap: 16,
      padding: { left: padding, right: padding },
    });

    testimonialsSplide.mount();
  };

  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initTestimonials);
  } else {
    initTestimonials();
  }
</script>
